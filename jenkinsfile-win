pipeline {
    agent any
    stages {
        stage('compile') {
            steps {
                echo 'Compiling...'
                git url: 'https://github.com/lerndevops/DevOpsClassCodes'
                bat script: 'mvn compile'
            }
        }
        stage('codereview-pmd') {
            steps {
                echo 'Running PMD analysis...'
                bat script: 'mvn -P metrics pmd:pmd'
            }
            post {
                success {
                    // Use the 'sh' step to run PMD and publish the report
                    sh 'pmd CPD --minimum-tokens 100 --files **/*.java --language java --format xml --outputfile pmd.xml'
                    publishHTML(target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: '',
                        reportFiles: 'pmd.xml',
                        reportName: 'PMD Report',
                        reportTitles: ''
                    ])
                }
            }
        }
        stage('unit-test') {
            steps {
                echo 'Running unit tests...'
                bat script: 'mvn test'
            }
            post {
                success {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }
        stage('metric-check') {
            steps {
                echo 'Running metric checks...'
                bat script: 'mvn cobertura:cobertura -Dcobertura.report.format=xml'
            }
            post {
                success {
                    cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: '**/target/site/cobertura/coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false                  
                }
            }
        }
        stage('package') {
            steps {
                echo 'Packaging...'
                bat script: 'mvn package'	
            }		
        }
    }
}
